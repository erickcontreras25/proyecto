{"version":3,"sources":["src/app/pages/reservar/reservar.page.html","src/app/pages/reservar/reservar-routing.module.ts","src/app/pages/reservar/reservar.module.ts","src/app/pages/reservar/reservar.page.scss","src/app/pages/reservar/reservar.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<app-header titulo=\\\"Reservar\\\"></app-header>\\n\\n\\n<ion-content class=\\\"background\\\">\\n\\n  <!-- <ion-button (click)=\\\"obtenerReservaciones()\\\">MOSTRAR HORARIOS</ion-button>\\n  <ion-item *ngFor='let user of reser'>\\n    <ion-label>Esta es la hora: : {{user.horaInicial | date:'yyyy-MM-dd HH'}}</ion-label>\\n  </ion-item>\\n  <ion-item>\\n  <ion-label>Hora Inicial</ion-label>\\n  <ion-datetime displayFormat=\\\"D MMM YYYY H\\\" \\n                name=\\\"horaInicial\\\"\\n                \\n                [(ngModel)]=\\\"reservacion.horaInicial\\\">\\n  </ion-datetime>\\n</ion-item>\\n\\n<h3>{{reservacion.horaInicial}}</h3> -->\\n\\n  \\n\\n  <!-- SELECT PARA ELEGIR COMPLEJO -->\\n  <!-- <ion-list>\\n    <ion-item>\\n      <ion-label>Complejo</ion-label>\\n      <ion-select [(ngModel)]=\\\"seleccion\\\"\\n                  (ngModelChange)=\\\"obtenerCancha()\\\">\\n        <ion-select-option *ngFor=\\\"let user of complejosAbiertos\\\" value=\\\"{{user.idComplejo}}\\\" >\\n          {{user.nombre}}\\n        </ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n  </ion-list> -->\\n\\n\\n\\n<!-- <form #formulario=\\\"ngForm\\\" (ngSubmit)=\\\"agregarReservacion()\\\"> -->\\n\\n  <!-- <ion-list> -->\\n\\n    <!-- INGRESAR HORA INICIAL Y FINAL DE RESERVACION -->\\n    <!-- <ion-item>\\n      <ion-label>Hora Inicial</ion-label>\\n      <ion-datetime displayFormat=\\\"HH:mm\\\" \\n                    name=\\\"horaInicial\\\"\\n                    minuteValues=\\\"0\\\" min=\\\"10:00\\\" \\n                    [(ngModel)]=\\\"reservacion.horaInicial\\\">\\n      </ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Hora Final</ion-label>\\n      <ion-datetime displayFormat=\\\"HH:mm\\\" \\n                    name=\\\"horaFinal\\\"\\n                    minuteValues=\\\"0\\\" min=\\\"11:00\\\" \\n                    [(ngModel)]=\\\"reservacion.horaFinal\\\">\\n      </ion-datetime>\\n    </ion-item> -->\\n\\n\\n    <!-- INGRESAR ID DE LA CANCHA -->\\n    <!-- <ion-list>\\n      <ion-item>\\n        <ion-label>Cancha</ion-label>\\n        <ion-select [(ngModel)]=\\\"reservacion.idCancha\\\"\\n                    (ngModelChange)=\\\"obtenerCanchaId()\\\"\\n                    name=\\\"idCancha\\\">\\n          <ion-select-option *ngFor=\\\"let user of canchas\\\" value=\\\"{{user.idCancha}}\\\" >\\n            Lps. {{user.precio}}\\n          </ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n    </ion-list> -->\\n\\n\\n  <!-- BOTONES PARA VER COMPLEJOS Y RESERVAR -->\\n  <!-- </ion-list>\\n  <ion-row>\\n    <ion-col>\\n      <ion-button expand=\\\"full\\\" type=\\\"submit\\\"\\n                  shape=\\\"round\\\"\\n                  size=\\\"small\\\"\\n                  color=\\\"tertiary\\\"\\n                  [disabled]=\\\"formulario.invalid\\\" \\n                  routerLink=\\\"/inicio\\\">\\n                  Reservar\\n      </ion-button>\\n    </ion-col>\\n    <ion-col>\\n      <ion-button shape=\\\"round\\\"\\n                  expand=\\\"full\\\"\\n                  size=\\\"small\\\"\\n                  color=\\\"tertiary\\\"\\n                  routerLink=\\\"/lista-complejos\\\">\\n        Ver complejos\\n      </ion-button>\\n    </ion-col>\\n  </ion-row> -->\\n\\n\\n    <!-- BOTON GRANDE PARA RESERVAR -->\\n  <!-- <ion-button expand=\\\"full\\\" type=\\\"submit\\\"\\n  [disabled]=\\\"formulario.invalid\\\" routerLink=\\\"/inicio\\\">\\n      Reservar\\n  </ion-button> -->\\n\\n<!-- </form> -->\\n\\n<!-- IMG PARA VISUALIZAR CANCHAS -->\\n  <!-- <ion-item>\\n    <img src={{canchaId.foto}} alt=\\\"200\\\" width=\\\"500\\\" class=\\\"img-rounded\\\">\\n  </ion-item> -->\\n\\n\\n\\n\\n<!-- AQUI COMIENZA LO NUEVO CON SLIDES -->\\n\\n\\n<ion-slides class=\\\"mainSlide\\\" [options]=\\\"{ autoHeight: true }\\\" #slidePrincipal>\\n    \\n  <ion-slide>\\n\\n    <form>\\n      <ion-grid>\\n\\n        <ion-row>\\n          <ion-col>\\n            <!-- <img src=\\\"/assets/img/im2.png\\\" alt=\\\"10\\\" width=\\\"20\\\"> -->\\n            <h1 class=\\\"ion-text-center\\\" style=\\\"color: black;\\\">Elige el complejo que quieras</h1>\\n          </ion-col>\\n        </ion-row>\\n      \\n        <ion-row>\\n          <ion-col>\\n            \\n              <div *ngFor='let user of complejos'>\\n\\n              <ion-card class=\\\"ion-text-center\\\" style=\\\"background-color: #F1F1F6; border-radius : 10px;\\\">\\n                \\n                <ion-row>\\n                  <ion-col *ngIf='user.estado == true'><h3>Abierto Ahora</h3></ion-col>\\n                  <ion-col *ngIf='user.estado == false'><h3>Cerrado Ahora</h3></ion-col>\\n                </ion-row>\\n                <img src=\\\"{{user.foto}}\\\" alt=\\\"200\\\" width=\\\"500\\\">\\n                <ion-card-title>\\n                  {{user.nombre}}\\n                </ion-card-title>\\n                <h6>\\n                  <ion-icon name=\\\"location-outline\\\" color=\\\"primary\\\"></ion-icon>\\n                     {{user.localidad }}\\n                </h6>\\n                <ion-button type=\\\"submit\\\"\\n                        color=\\\"tertiary\\\"\\n                        shape=\\\"round\\\"\\n                        (click)=\\\"obtenerCanchasComplejo(user.idComplejo)\\\"\\n                        (click)=\\\"obtenerComplejo(user.idComplejo)\\\"\\n                        (click)=\\\"goCancha()\\\">\\n              Elegir cancha\\n            </ion-button>\\n\\n              </ion-card>\\n\\n              </div>\\n          </ion-col>\\n        </ion-row>\\n\\n        <!-- <ion-row>\\n          <ion-col>\\n            <ion-button type=\\\"submit\\\"\\n                        color=\\\"tertiary\\\"\\n                        shape=\\\"round\\\"\\n                        (ngModelChange)=\\\"obtenerCancha()\\\"\\n                        (click)=\\\"goCancha()\\\">\\n              Canchas\\n            </ion-button>\\n          </ion-col>\\n        </ion-row> -->\\n\\n      </ion-grid>\\n    </form>\\n  </ion-slide>\\n\\n  <!-- ----------------------------------------SLIDE CANCHAS----------------------------------------------- -->\\n  <ion-slide>\\n    <ion-grid>\\n          <form>\\n            <ion-row>\\n              <ion-col>\\n                <!-- <img src=\\\"/assets/img/im2.png\\\"> -->\\n                <h1 class=\\\"ion-text-center\\\" style=\\\"color: black;\\\">Elige la cancha que mas te guste</h1>\\n              </ion-col>\\n            </ion-row>\\n              <ion-row>\\n                  <ion-col>  \\n\\n                      <div *ngFor='let user of canchas'>\\n\\n                        <ion-card class=\\\"ion-text-center\\\" style=\\\"border-radius : 10px;\\\">\\n                          <img src=\\\"{{user.foto}}\\\" alt=\\\"200\\\" width=\\\"500\\\">\\n                          <ion-card-title>\\n                            Precio/hora: Lps.{{user.precio}}.00\\n                          </ion-card-title>\\n                          <ion-row>\\n\\n                          </ion-row>\\n                        \\n                          <ion-button type=\\\"submit\\\"\\n                            color=\\\"tertiary\\\"\\n                            shape=\\\"round\\\"\\n                            \\n                            (click)=\\\"obtenerCancha(user.idCancha)\\\"\\n                            (click)=\\\"goHorarios()\\\">\\n                            Elegir hora\\n                          </ion-button>\\n\\n                      </ion-card>\\n                          \\n                      </div>\\n                  </ion-col>\\n              </ion-row>\\n\\n              <ion-row>\\n              <ion-col>\\n                  <ion-button type=\\\"submit\\\"\\n                              color=\\\"tertiary\\\"\\n                              shape=\\\"round\\\"\\n                              (click)=\\\"goComplejos()\\\">\\n                      Regresar\\n                  </ion-button>\\n              </ion-col>\\n          </ion-row>\\n          </form>\\n      </ion-grid>\\n\\n    </ion-slide>\\n\\n\\n<!-- -------------------------------SLIDE HORARIOS------------------------------------- -->\\n    <ion-slide>\\n      <ion-grid fixed>\\n            <form>\\n                <ion-row>\\n                  <ion-col>\\n                    <h3 style=\\\"color: black; border-radius : 10px;\\\">\\n                    En este complejo puede reservar entre <b style=\\\"color: red;\\\">{{complejo.horaInicio | date:'HH'}}:00</b>\\n                     y \\n                     <b style=\\\"color: red;\\\">{{complejo.horaCierre | date:'HH'}}:00</b>\\n                  </h3>\\n                  </ion-col>\\n                </ion-row>\\n\\n                <ion-row>\\n                    <ion-col>  \\n  \\n                      <ion-item>\\n                        <ion-label>Hora Inicial</ion-label>\\n                        <ion-datetime displayFormat=\\\"D MMM YYYY HH:mm\\\" \\n                                      name=\\\"horaInicial\\\"\\n                                      minuteValues=\\\"0\\\" min=\\\"10:00\\\" \\n                                      [(ngModel)]=\\\"reservacion.horaInicial\\\"\\n                                      (ngModelChange)=\\\"volver()\\\">\\n                        </ion-datetime>\\n                      </ion-item>\\n                      <ion-item>\\n                        <ion-label>Hora Final</ion-label>\\n                        <ion-datetime displayFormat=\\\"D MMM YYYY HH:mm\\\" \\n                                      name=\\\"horaFinal\\\"\\n                                      minuteValues=\\\"0\\\" min=\\\"11:00\\\" \\n                                      [(ngModel)]=\\\"reservacion.horaFinal\\\"\\n                                      (ngModelChange)=\\\"volver()\\\">\\n                        </ion-datetime>\\n                      </ion-item>\\n                        \\n                    </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-col>\\n                    <ion-button type=\\\"submit\\\"\\n                                color=\\\"tertiary\\\"\\n                                shape=\\\"round\\\"\\n                                (click)=\\\"goCancha()\\\">\\n                        Regresar\\n                    </ion-button>\\n                </ion-col>\\n                <ion-col>\\n                    <ion-button type=\\\"submit\\\"\\n                                color=\\\"tertiary\\\"\\n                                shape=\\\"round\\\"\\n                                *ngIf=\\\"auxReser==true\\\"\\n                                (click)=\\\"llenar()\\\"\\n                                (click)=\\\"goReservar()\\\">\\n                        Ver resumen\\n                    </ion-button>\\n                </ion-col>\\n            </ion-row>\\n\\n            <ion-row>\\n              <ion-col>\\n                <h3 style=\\\"color: black;\\\">Estas reservando por un tiempo de </h3>\\n                <!-- <h3 style=\\\"text-shadow: 1px 1px 1px black; color: black;\\\">Estas reservando por un tiempo de </h3> -->\\n                <h2 *ngIf=\\\"auxHoras!=null\\\" style=\\\"color: red;\\\">{{auxHoras}} horas</h2>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row>\\n              <ion-col>\\n                <ion-button (click)=\\\"validarFecha()\\\">Verificar Horario</ion-button>\\n              </ion-col>\\n            </ion-row>\\n            </form>\\n        </ion-grid>\\n  \\n      </ion-slide>\\n\\n\\n<!-- ----------------------------------SLIDE RESUMEN---------------------------------------- -->\\n    <ion-slide>\\n      <ion-grid fixed>\\n            <form>\\n              <ion-row>\\n                <ion-col>\\n                  <!-- <img src=\\\"/assets/img/im2.png\\\"> -->\\n                </ion-col>\\n              </ion-row>\\n                <ion-row>\\n                    <ion-col>  \\n\\n                      <ion-card class=\\\"ion-text-center\\\" style=\\\"background-color: rgb(236, 236, 243); border-radius : 10px;\\\">\\n                          <h3 class=\\\"ion-text-center\\\">Complejo: {{complejo.nombre}}</h3>\\n                          <h6>\\n                            <ion-icon class=\\\"size\\\" name=\\\"calendar-outline\\\" color=\\\"secondary\\\"></ion-icon>\\n                                Dia y hora de reserva:\\n                          </h6>\\n                          <h6>{{reservacion.horaInicial | date:'MMMM-dd HH:mm'}} a {{reservacion.horaFinal | date:'HH:mm'}}</h6>\\n                          <h6>\\n                            <ion-icon class=\\\"size\\\" name=\\\"cash-outline\\\" color=\\\"success\\\"></ion-icon>\\n                              Total a pagar:\\n                          </h6>\\n                          <h6>Lps.{{canchaId.precio * auxHoras}}.00</h6>                          \\n                          <h6>\\n                            <ion-icon class=\\\"size\\\" name=\\\"location-outline\\\" color=\\\"primary\\\"></ion-icon>\\n                              Direccion:\\n                          </h6>\\n                          <h6>{{complejo.localidad}}</h6>\\n                          <!-- <ion-item>De: {{reservacion.horaInicial | date:'yyyy-MM-dd HH:mm'}}</ion-item>\\n                          <ion-item>A: {{reservacion.horaFinal | date:'yyyy-MM-dd HH:mm'}}</ion-item>\\n                          <ion-item>Total a pagar: {{canchaId.precio * auxHoras}}</ion-item>\\n                          <ion-item>Complejo: {{complejo.nombre}}</ion-item>\\n                          <ion-item>Lugar: {{complejo.localidad}}</ion-item> -->\\n                          \\n\\n                      </ion-card>\\n  \\n                      \\n                        \\n                    </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                  <ion-col>\\n                    <ion-button type=\\\"submit\\\"\\n                                color=\\\"tertiary\\\"\\n                                shape=\\\"round\\\"\\n                                (click)=\\\"goHorarios()\\\">\\n                        Regresar\\n                    </ion-button>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row>\\n                <ion-col>\\n                    <ion-button type=\\\"submit\\\"\\n                                color=\\\"success\\\"\\n                                shape=\\\"round\\\"\\n                                expand=\\\"full\\\"\\n                                (click)=\\\"agregarReservacion()\\\">\\n                        Confirmar Reserva\\n                    </ion-button>\\n                </ion-col>\\n            </ion-row>\\n            </form>\\n        </ion-grid>\\n  \\n      </ion-slide>\\n\\n\\n\\n</ion-slides>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n</ion-content>\\n\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ReservarPage } from './reservar.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReservarPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReservarPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ReservarPageRoutingModule } from './reservar-routing.module';\n\nimport { ReservarPage } from './reservar.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReservarPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [ReservarPage]\n})\nexport class ReservarPageModule {}\n","export default \"ion-icon.size {\\n  font-size: 27px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcmVzZXJ2YXIvQzpcXFVzZXJzXFxlcmlja1xcT25lRHJpdmVcXERlc2t0b3BcXGlvbmljXFxwcm95ZWN0by9zcmNcXGFwcFxccGFnZXNcXHJlc2VydmFyXFxyZXNlcnZhci5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL3Jlc2VydmFyL3Jlc2VydmFyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQTtFQUNJLGVBQUE7QUNKSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Jlc2VydmFyL3Jlc2VydmFyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGlvbi1jb250ZW50LmJhY2tncm91bmR7XHJcbi8vICAgICAtLWJhY2tncm91bmQ6IHVybCgvYXNzZXRzL2ltZy9mb25kb3Jlc2VydmEuanBnKSAwIDAvMTAwJSAxMDAlIG5vLXJlcGVhdDtcclxuLy8gICAgIG9wYWNpdHk6IDAuODtcclxuLy8gfVxyXG5cclxuaW9uLWljb24uc2l6ZSB7XHJcbiAgICBmb250LXNpemU6IDI3cHg7XHJcbn0iLCJpb24taWNvbi5zaXplIHtcbiAgZm9udC1zaXplOiAyN3B4O1xufSJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Reservacion } from 'src/models/reservacion.models';\nimport { ApiserviService } from 'src/app/services/apiservi.service';\nimport { Complejo } from 'src/models/complejo.models';\nimport { Cancha } from 'src/models/cancha.models';\nimport { IonSlides, NavController } from '@ionic/angular';\nimport * as moment from 'moment';\nimport { Usuario } from 'src/models/usuario.models';\nimport { UsuarioService } from 'src/app/services/usuario.service';\nimport { User } from 'src/models/user.models';\nimport { AlertaServiceService } from 'src/app/services/alerta-service.service';\n\n@Component({\n  selector: 'app-reservar',\n  templateUrl: './reservar.page.html',\n  styleUrls: ['./reservar.page.scss'],\n})\nexport class ReservarPage implements OnInit {\n\n  @ViewChild('slidePrincipal', {static: true}) slides: IonSlides;\n\n  nombre: string;\n  seleccion: number;\n  \n  complejosAbiertos: Complejo[];\n  canchas: Cancha[];\n  aux = false;\n  auxReser = false;\n  auxHoras;\n\n  complejos: Complejo[];\n  complejo = {\n    idComplejo: 0,\n    nombre: '',\n    localidad: '',\n    foto: null,\n    estado: false,\n    longitud: 0,\n    latitud: 0,\n    horaInicio: new Date(),\n    horaCierre: new Date(),\n    userId: ''\n  };\n\n  canchaId = {\n    idCancha: 0,\n    precio: null,\n    foto: null,\n    idComplejo: null\n  };\n\n  reservaciones: Reservacion[] = [];\n  reser: Reservacion[] = [];\n\n  reservacion = {\n    idReservacion: 0,\n    horaInicial: new Date(),\n    horaFinal: new Date(),\n    pago: false,\n    pagoParcial: false,\n    idCancha: 0,\n    userId: ''\n  };\n\n\n  perfil: User;\n\n  constructor(private apiServi: ApiserviService,\n              private usuarioService: UsuarioService,\n              private navCtrl: NavController,\n              private alertaService: AlertaServiceService) { }\n\n  ngOnInit() {\n    this.perfil = this.usuarioService.getUsuario();\n\n    this.slides.lockSwipes(true);\n\n    this.reservacion.userId = this.perfil.id;\n    console.log('ESTE ES EL ID OBTENIDO > > ' + this.reservacion.userId);\n\n\n    this.obtenerComplejos();\n\n    this.obtenerComplejoEstado();\n\n\n  }\n\n\n  // ---------------METODOS COMPLEJO------------------------------------------------\n  obtenerComplejos() {\n    this.apiServi.getComplejo()\n    .subscribe((resp: Complejo[]) => {\n      this.complejos = resp;\n      console.log('SERVICIO ', resp);\n    });\n  }\n\n  obtenerComplejoEstado() {\n    this.apiServi.getComplejoEstado(true)\n    .subscribe((resp: Complejo[]) => {\n      this.complejosAbiertos = resp;\n    });\n  }\n\n  obtenerComplejoId(id: number) {\n    this.apiServi.getComplejoId(id)\n    .subscribe( (resp: Complejo) => {\n      this.complejo = resp;\n      console.log(this.complejo);\n    });\n  }\n\n\n  // ----------------------METODOS RESERVAR-----------------------------------\n  obtenerReservacionId() {\n    this.apiServi.getReservacionId(this.reservacion.idReservacion)\n    .subscribe( resp => {\n      console.log('EJECUTADO CON EXITO');\n    });\n  }\n  agregarReservacion() {\n    this.apiServi.postReservacion(this.reservacion)\n    .subscribe((data) => {\n      this.reservaciones.push(this.reservacion);\n      this.reservacion = {\n        idReservacion: 0,\n        horaInicial: new Date(),\n        horaFinal: new Date(),\n        pago: false,\n        pagoParcial: false,\n        idCancha: 0,\n        userId: ''\n      };\n      this.alertaService.alertaInformativa('Su reserva se realizo con exito. \\n Puede verla ingresando a su Mi Perfil en Mis Reservas');\n      this.navCtrl.navigateRoot('/inicio');\n    },\n    (error) => {\n      console.log(error);\n      window.alert('Ingrese los datos correctamente');\n    }\n    );\n  }\n  modificarReservacion() {\n    this.apiServi.putReservacion(this.reservacion.idReservacion, this.reservacion)\n    .subscribe((data) => {\n      this.reservaciones.push(this.reservacion);\n      this.reservacion = {\n        idReservacion: 0,\n        horaInicial: new Date(),\n        horaFinal: new Date(),\n        pago: false,\n        pagoParcial: false,\n        idCancha: 0,\n        userId: ''\n      };\n      window.alert('ACTUALIZADO CON EXITO');\n    },\n    (error) => {\n      console.log(error);\n    }\n    );\n  }\n  eliminarReservacion() {\n    this.apiServi.deleteReservacion(this.reservacion.idReservacion)\n    .subscribe( resp => {\n      console.log('ELIMINADO CON EXITO');\n    });\n  }\n\n\n\n  volver() {\n    this.auxReser = false;\n  }\n\n\n\n  // ----------------------------METODOS CANCHAS-----------------------------------\n  obtenerCanchasComplejo(id: number) {\n    this.apiServi.getCanchaComplejo(id)\n    .subscribe((resp: Cancha[]) => {\n      this.canchas = resp;\n      // console.log('CANCHAS ', this.canchas);\n    });\n  }\n  obtenerCanchaId(id: number) {\n    this.apiServi.getCanchaId(id)\n    .subscribe((resp: Cancha) => {\n      this.canchaId = resp;\n      this.reservacion.idCancha = this.canchaId.idCancha;\n    });\n  }\n\n\n  obtenerReservas(id: number) {\n    this.apiServi.getReservacionComplejo(id)\n    .subscribe((resp: Reservacion[]) => {\n      this.reser = resp;\n      console.log(this.reser);\n    });\n  }\n\n\n  validarFecha() {\n\n    const ini = moment().format('MM-DD-YYYY HH:mm');\n\n    const dInicial = moment(this.reservacion.horaInicial).format('MM-DD-YYYY HH:mm');\n    const dFinal = moment(this.reservacion.horaFinal).format('MM-DD-YYYY HH:mm');\n\n    const abre = moment(this.reservacion.horaInicial).format('HH');\n    const cierra = moment(this.reservacion.horaFinal).format('HH');\n    const abreComplejo = moment(this.complejo.horaInicio).format('HH');\n    const cierraComplejo = moment(this.complejo.horaCierre).format('HH');\n\n    if (dInicial <= ini || dFinal <= ini) {\n      this.volver();\n      return alert('La hora inicial o final no puede ser menor que la hora actual');\n    }\n\n    if (dInicial === dFinal) {\n      this.volver();\n      return alert('La hora final no puede ser igual que la inicial');\n    }\n\n    if (abre < abreComplejo || cierra > cierraComplejo) {\n      this.volver();\n      return alert('Solo puede reservar en horario que permite el complejo');\n    }\n\n    for (let i = 0; i < this.reser.length; i++) {\n      const fechInicial = moment(this.reser[i].horaInicial).format('MM-DD-YYYY H:mm');\n      const fechFinal = moment(this.reser[i].horaFinal).format('MM-DD-YYYY H:mm');\n\n      if (dInicial > fechInicial && dInicial < fechFinal || dFinal > fechInicial && dFinal < fechFinal) {\n        this.volver();\n        return alert('El horario de ' + fechInicial + ' a ' + fechFinal + ' no esta disponible');\n      }\n\n      if (dInicial === fechInicial || dFinal === fechFinal) {\n        this.volver();\n        return alert('Este horario no esta disponible');\n      }\n\n    }\n    const inic = moment(this.reservacion.horaInicial);\n    const fin = moment(this.reservacion.horaFinal);\n    this.auxHoras = fin.diff(inic, 'hours');\n\n    if (this.auxHoras >= 4) {\n      this.volver();\n      return alert('No puedes reservar por más de 3 horas.');\n    }\n\n    this.auxReser = true;\n    return alert('Horario disponible');\n  }\n\n\n\n\n  // -------------------------------METODOS OBTENER------------------\nidCancha(id: number) {\n  this.reservacion.idCancha = id;\n}\n// precioCancha(precio: number) {\n//   this.seleccion = precio;\n// }\n// nombreComplejo(nombre: string) {\n//   this.complejo.nombre = nombre;\n// }\n// localidadComplejo(local: string) {\n//   this.complejo.localidad = local;\n// }\nobtenerComplejo(id: number) {\n  this.obtenerComplejoId(id);\n}\nobtenerCancha(id: number) {\n  this.obtenerCanchaId(id);\n  this.obtenerReservas(id);\n}\nllenar() {\n  this.reservacion.idCancha = this.canchaId.idCancha;\n}\n\n\n\n\n// -------------------------------------------------SLIDE--------------------------------\ngoComplejos() {\n  this.slides.lockSwipes(false);\n  this.slides.slideTo(0);\n  this.slides.lockSwipes(true);\n}\n\ngoCancha() {\n  this.auxReser = false;\n  this.slides.lockSwipes(false);\n  this.slides.slideTo(1);\n  this.slides.lockSwipes(true);\n}\n\ngoHorarios() {\n  // this.obtenerReservas();\n  this.slides.lockSwipes(false);\n  this.slides.slideTo(2);\n  this.slides.lockSwipes(true);\n}\n\ngoReservar() {\n  this.slides.lockSwipes(false);\n  this.slides.slideTo(3);\n  this.slides.lockSwipes(true);\n}\n\n\n}\n"],"sourceRoot":"webpack:///","file":"pages-reservar-reservar-module-es5.js"}